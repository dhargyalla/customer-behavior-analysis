-- Q1 What is total revenue generated by Female Vs Male customer?
SELECT gender,  sum(purchase_amount) as revenue
FROM customer 
GROUP by gender;

-- Q2. Which customer used a discount but still spent more than the average purchase amount?
SELECT customer_id, purchase_amount
FROM customer
WHERE discount_applied = 'Yes' 
AND purchase_amount >= (SELECT avg(purchase_amount) FROM customer)

-- Q3. Which are the top 5 products with the highest average rating review?
SELECT item_purchased,  round(avg(review_rating) ,2) as "Average product rating"
FROM customer
GROUP by item_purchased
ORDER by avg(review_rating) DESC
LIMIT 5;

-- Q4. Compare average purchase amounts between standard and express shipping.
SELECT shipping_type,  round(avg(purchase_amount),2) as 'average purchas'
FROM customer
WHERE shipping_type in ( 'Express', 'Standard')
GROUP by shipping_type;

-- Q5. Do subscribed customers spend more? Compare average spend and total revenue between subscribers and non-subscribers?
SELECT subscription_status, count(customer_id) as total_customer, round(avg(purchase_amount),2)  as average_spend, round(sum(purchase_amount),2) as total_revenue
FROM customer
GROUP by subscription_status
ORDER by total_revenue, average_spend DESC;

-- Q6. Which 5 products have the highest percentage of purchases with discount applied?
SELECT item_purchased, round(100* sum(CASE WHEN discount_applied = 'Yes'  THEN 1 ELSE 0 END)/count(*),2) as discount_rate
FROM customer
GROUP by item_purchased
ORDER by discount_rate desc
LIMIT 5;

-- Q7. Segment customers into new, returning and loyal based on their total number of previous purchases and show the count of each segment.
WITH customer_type as(
SELECT customer_id, previous_purchases,
CASE 
	WHEN previous_purchases = 1 THEN 'NEW'
	WHEN previous_purchases BETWEEN 2 AND 10 THEN 'returning'
	ELSE 'Loyal'
	END as customer_segment
	FROM customer
)
 SELECT customer_segment, count(*) as 'Number of Customer'
 FROM customer_type
 GROUP by customer_segment;

-- Q8. What are the top 3  most purchase product within each category?
with item_counts as (
SELECT category, item_purchased,
count(customer_id) as total_orders,
row_number() OVER(PARTITION by category ORDER by count(customer_id) DESC) as item_rank
FROM customer
GROUP by category, item_purchased
)
SELECT item_rank, category, item_purchased, total_orders
FROM item_counts
WHERE item_rank <= 3;

-- Q9. Are customers who are repeated buyers(more than 5 previous purchases) also likely to subscribe?
SELECT subscription_status, count(customer_id) as repeat_buyers
FROM customer
WHERE previous_purchases > 5
GROUP by subscription_status;

-- Q10. What is the revenue contribution of each age group?
SELECT age_group, sum(purchase_amount) as total_revenue
From customer
Group by age_group
ORDER by total_revenue DESC








SELECT shipping_type,  round(avg(purchase_amount),2) as 'average purchas'
FROM customer
WHERE shipping_type in ( 'Express', 'Standard')
GROUP by shipping_type;

SELECT subscription_status, count(customer_id) as total_customer, round(avg(purchase_amount),2)  as average_spend, round(sum(purchase_amount),2) as total_revenue
FROM customer
GROUP by subscription_status
ORDER by total_revenue, average_spend DESC;


SELECT item_purchased, round(100* sum(CASE WHEN discount_applied = 'Yes'  THEN 1 ELSE 0 END)/count(*),2) as discount_rate
FROM customer
GROUP by item_purchased
ORDER by discount_rate desc
LIMIT 5;

WITH customer_type as(
SELECT customer_id, previous_purchases,
CASE 
	WHEN previous_purchases = 1 THEN 'NEW'
	WHEN previous_purchases BETWEEN 2 AND 10 THEN 'returning'
	ELSE 'Loyal'
	END as customer_segment
	FROM customer
)
 SELECT customer_segment, count(*) as 'Number of Customer'
 FROM customer_type
 GROUP by customer_segment;
 
with item_counts as (
SELECT category, item_purchased,
count(customer_id) as total_orders,
row_number() OVER(PARTITION by category ORDER by count(customer_id) DESC) as item_rank
FROM customer
GROUP by category, item_purchased
)

SELECT item_rank, category, item_purchased, total_orders
FROM item_counts
WHERE item_rank <= 3;

SELECT subscription_status, count(customer_id) as repeat_buyers
FROM customer
WHERE previous_purchases > 5
GROUP by subscription_status;

SELECT age_group, sum(purchase_amount) as total_revenue
From customer
Group by age_group
ORDER by total_revenue DESC




